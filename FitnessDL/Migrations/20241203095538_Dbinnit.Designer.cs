// <auto-generated />
using System;
using FitnessDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessDL.Migrations
{
    [DbContext(typeof(FitnessContext))]
    [Migration("20241203095538_Dbinnit")]
    partial class Dbinnit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessDL.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("FitnessDL.Models.FitnessProgram", b =>
                {
                    b.Property<string>("ProgramCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramCode");

                    b.ToTable("Program", (string)null);
                });

            modelBuilder.Entity("FitnessDL.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("FitnessDL.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotId"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartOfDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TimeSlotId");

                    b.ToTable("TimeSlot");
                });

            modelBuilder.Entity("FitnessProgramMember", b =>
                {
                    b.Property<string>("FitnessProgramsProgramCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("FitnessProgramsProgramCode", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("FitnessProgramMember");
                });

            modelBuilder.Entity("FitnessDL.Models.Member", b =>
                {
                    b.OwnsMany("FitnessDL.Models.CyclingSession", "CyclingSessions", b1 =>
                        {
                            b1.Property<int>("CyclingSessionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("CyclingSessionId"));

                            b1.Property<int>("Avg_Cadence")
                                .HasColumnType("int");

                            b1.Property<int>("Avg_Watt")
                                .HasColumnType("int");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Duration")
                                .HasColumnType("int");

                            b1.Property<int>("Max_Cadence")
                                .HasColumnType("int");

                            b1.Property<int>("Max_Watt")
                                .HasColumnType("int");

                            b1.Property<int?>("MemberId")
                                .HasColumnType("int");

                            b1.Property<string>("TrainingType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CyclingSessionId");

                            b1.HasIndex("MemberId");

                            b1.ToTable("CyclingSession");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsMany("FitnessDL.Models.Reservation", "Reservations", b1 =>
                        {
                            b1.Property<int>("ReservationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("ReservationId"));

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("EquipementId")
                                .HasColumnType("int");

                            b1.Property<int?>("MemberId")
                                .HasColumnType("int");

                            b1.Property<int>("TimeSlotId")
                                .HasColumnType("int");

                            b1.HasKey("ReservationId");

                            b1.HasIndex("EquipementId");

                            b1.HasIndex("MemberId");

                            b1.HasIndex("TimeSlotId");

                            b1.ToTable("Reservation");

                            b1.HasOne("FitnessDL.Models.Equipment", "Equipment")
                                .WithMany()
                                .HasForeignKey("EquipementId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("MemberId");

                            b1.HasOne("FitnessDL.Models.TimeSlot", "TimeSlot")
                                .WithMany()
                                .HasForeignKey("TimeSlotId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Equipment");

                            b1.Navigation("TimeSlot");
                        });

                    b.OwnsMany("FitnessDL.Models.RunningSession", "RunningSessions", b1 =>
                        {
                            b1.Property<int>("RunningSessionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("RunningSessionId"));

                            b1.Property<int>("Avg_Speed")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Duration")
                                .HasColumnType("int");

                            b1.Property<int?>("MemberId")
                                .HasColumnType("int");

                            b1.HasKey("RunningSessionId");

                            b1.HasIndex("MemberId");

                            b1.ToTable("RunningSession");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");

                            b1.OwnsMany("FitnessDL.Models.RunningSessionDetail", "Details", b2 =>
                                {
                                    b2.Property<int>("RunningSessionId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("Interval_Speed")
                                        .HasColumnType("int");

                                    b2.Property<int>("Interval_Time")
                                        .HasColumnType("int");

                                    b2.Property<int>("Seq_nr")
                                        .HasColumnType("int");

                                    b2.HasKey("RunningSessionId", "Id");

                                    b2.ToTable("RunningSessionDetail");

                                    b2.WithOwner()
                                        .HasForeignKey("RunningSessionId");
                                });

                            b1.Navigation("Details");
                        });

                    b.Navigation("CyclingSessions");

                    b.Navigation("Reservations");

                    b.Navigation("RunningSessions");
                });

            modelBuilder.Entity("FitnessProgramMember", b =>
                {
                    b.HasOne("FitnessDL.Models.FitnessProgram", null)
                        .WithMany()
                        .HasForeignKey("FitnessProgramsProgramCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessDL.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
